# Adding the app server
'4011' -> PORT Server(xpress/Server)
Server APP -> APP AuthMiddle(finance/AuthMiddleware)
AuthMiddle APP -> APP JsonMiddleware(finance/JsonBodyParserMiddleware)
JsonMiddleware APP -> APP Router(xpress/Router)

# Routing
'post /api/expenses' -> PATTERN[0] Router
'get /api/expenses/:id' -> PATTERN[1] Router
'delete /api/expenses/:id' -> PATTERN[2] Router
'put /api/expenses' -> PATTERN[3] Router
'get /api/expenses*' -> PATTERN[4] Router
'get /api/reports/expenses/monthly*' -> PATTERN[5] Router

'post /api/incomes' -> PATTERN[6] Router
'get /api/incomes/:id' -> PATTERN[7] Router
'delete /api/incomes/:id' -> PATTERN[8] Router
'put /api/incomes' -> PATTERN[9] Router
'get /api/incomes*' -> PATTERN[10] Router
'get /api/reports/incomes/monthly*' -> PATTERN[11] Router

'get /api/reports/trend*' -> PATTERN[12] Router



############
#
# EXPENSES
#
############

#
# CREATE/SAVE (Expense)
#
'expense' -> NAME Store(finance/Store)
Router REQ[0] -> REQ Create(finance/Create)
Create RES -> RES CreateResponse(finance/Response)
Create OUT -> IN CreateValidate(finance/Validate)
CreateValidate OUT -> IN Store(finance/Store)
Store OUT -> CREATED CreateResponse(finance/Response)

#
# RETRIEVE/FIND/GET
#
Router REQ[1] -> REQ Retrieve(finance/Retrieve)
Retrieve RES -> RES RetrieveResponse(finance/Response)
Retrieve OUT -> ID RetrieveValidate(finance/Validate)
RetrieveValidate OUT -> IN Fetch(finance/Fetch)
Fetch OUT -> RETRIEVED RetrieveResponse(finance/Response)


#
# REMOVE/DELETE
#
Router REQ[2] -> REQ Delete(finance/Delete)
Delete RES -> RES DeleteResponse(finance/Response)
Delete OUT -> ID DeleteValidate(finance/Validate)
DeleteValidate OUT -> IN Removed(finance/Removed)
Removed OUT -> DELETED DeleteResponse(finance/Response)

#
# UPDATE
#
Router REQ[3] -> REQ Update(finance/Update)
Update RES -> RES UpdateResponse(finance/Response)
Update OUT -> ID UpdateValidate(finance/Validate)
UpdateValidate OUT -> IN StoreUpdate(finance/StoreUpdate)
StoreUpdate OUT -> UPDATED UpdateResponse(finance/Response)

#
# LIST
#
'expense' -> NAME FetchList(finance/FetchList)
Router REQ[4] -> REQ List(finance/List)
List RES -> RES ListResponse(finance/Response)
List OUT -> IN FetchList(finance/FetchList)
FetchList OUT -> RETRIEVED ListResponse(finance/Response)



############
#
# INCOME
#
############

#
# CREATE/SAVE
#
'income' -> NAME IncomeStore(finance/Store)
Router REQ[6] -> REQ IncomeCreate(finance/Create)
IncomeCreate RES -> RES IncomeCreateResponse(finance/Response)
IncomeCreate OUT -> IN IncomeCreateValidate(finance/Validate)
IncomeCreateValidate OUT -> IN IncomeStore(finance/Store)
IncomeStore OUT -> CREATED IncomeCreateResponse(finance/Response)

#
# RETRIEVE/FIND/GET (could be merged since using uuid, but future queries)
#
Router REQ[7] -> REQ IncomeRetrieve(finance/Retrieve)
IncomeRetrieve RES -> RES IncomeRetrieveResponse(finance/Response)
IncomeRetrieve OUT -> ID IncomeRetrieveValidate(finance/Validate)
IncomeRetrieveValidate OUT -> IN IncomeFetch(finance/Fetch)
IncomeFetch OUT -> RETRIEVED IncomeRetrieveResponse(finance/Response)


#
# REMOVE/DELETE
#
Router REQ[8] -> REQ IncomeDelete(finance/Delete)
IncomeDelete RES -> RES IncomeDeleteResponse(finance/Response)
IncomeDelete OUT -> ID IncomeDeleteValidate(finance/Validate)
IncomeDeleteValidate OUT -> IN IncomeRemoved(finance/Removed)
IncomeRemoved OUT -> DELETED IncomeDeleteResponse(finance/Response)

#
# UPDATE
#
Router REQ[9] -> REQ IncomeUpdate(finance/Update)
IncomeUpdate RES -> RES IncomeUpdateResponse(finance/Response)
IncomeUpdate OUT -> ID IncomeUpdateValidate(finance/Validate)
IncomeUpdateValidate OUT -> IN IncomeStoreUpdate(finance/StoreUpdate)
IncomeStoreUpdate OUT -> UPDATED IncomeUpdateResponse(finance/Response)

#
# LIST
#
'income' -> NAME IncomeFetchList(finance/FetchList)
Router REQ[10] -> REQ IncomeList(finance/List)
IncomeList RES -> RES IncomeListResponse(finance/Response)
IncomeList OUT -> IN IncomeFetchList(finance/FetchList)
IncomeFetchList OUT -> RETRIEVED IncomeListResponse(finance/Response)



######
#
# REPORTS/MONTHLY
#
'expense' -> NAME WithMonthYear(finance/FetchWithMonthYear)
Router REQ[5] -> REQ Monthly(finance/Monthly)
Monthly RES -> RES MonthlyResponse(finance/Response)
Monthly OUT -> IN WithMonthYear(finance/FetchWithMonthYear)
WithMonthYear OUT -> MONTHLY MonthlyResponse(finance/Response)

'income' -> NAME IncomeWithMonthYear(finance/FetchWithMonthYear)
Router REQ[11] -> REQ IncomeMonthly(finance/Monthly)
IncomeMonthly RES -> RES IncomeMonthlyResponse(finance/Response)
IncomeMonthly OUT -> IN IncomeWithMonthYear(finance/FetchWithMonthYear)
IncomeWithMonthYear OUT -> MONTHLY IncomeMonthlyResponse(finance/Response)



######
#
# REPORTS/BALANCE/TREND
#
Router REQ[12] -> REQ Trend(finance/Trend)
Trend RES -> RES TrendResponse(finance/Response)

# if it has no range, get one
Trend WITHOUTRANGE -> IN Entries(AlphaOmegaEntries)
Entries OUT -> IN BalanceTrend(finance/BalanceTrend)

# else, it has one, use it
Trend WITHRANGE -> IN BalanceTrend(finance/BalanceTrend)

BalanceTrend OUT -> IN Reports(finance/Reports)
Reports OUT -> TREND TrendResponse(finance/Response)

# Log with TestLogger
Server ERROR -> IN Logger(xpress/TestLogger)
Router ERROR -> IN Logger
