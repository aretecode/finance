// Generated by CoffeeScript 1.10.0
(function() {
  var DatabaseComponent, ExtendedComponent,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ExtendedComponent = require('./ExtendedComponent.coffee');

  DatabaseComponent = (function(superClass) {
    extend(DatabaseComponent, superClass);

    function DatabaseComponent() {
      this.error = bind(this.error, this);
      return DatabaseComponent.__super__.constructor.apply(this, arguments);
    }

    DatabaseComponent.prototype.sendThenDiscThenDestroy = function(name, data) {
      this.sendThenDiscon(name, data);
      return this.pg.destroy();
    };

    DatabaseComponent.prototype.sendThenDiscThenDest = function(name, data) {
      return this.sendThenDiscThenDestroy(name, data);
    };

    DatabaseComponent.prototype.error = function(e, groups, errorPort) {
      var group, i, j, len, len1;
      if (groups == null) {
        groups = [];
      }
      if (errorPort == null) {
        errorPort = 'error';
      }
      this.pg.destroy();
      if (this.outPorts[errorPort] && (this.outPorts[errorPort].isAttached() || !this.outPorts[errorPort].isRequired())) {
        for (i = 0, len = groups.length; i < len; i++) {
          group = groups[i];
          this.outPorts[errorPort].beginGroup(group);
        }
        this.outPorts[errorPort].send(e);
        for (j = 0, len1 = groups.length; j < len1; j++) {
          group = groups[j];
          this.outPorts[errorPort].endGroup();
        }
        this.outPorts[errorPort].disconnect();
        return;
      }
      throw e;
    };

    return DatabaseComponent;

  })(ExtendedComponent);

  module.exports.DatabaseComponent = DatabaseComponent;

}).call(this);
